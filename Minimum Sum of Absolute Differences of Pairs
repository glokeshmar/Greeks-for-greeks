//my solution

package GFG_PROBLEM;
import java.util.*;
public class minisum_sum_of_absolute_differences_of_pairs {
	public static void main(String args[]) {
		int a[]=new int[] {4,1,8,7}, b[]=new int[] {2,3,6,5};
		int n=a.length;
		sort(a,n);
		sort(b,n);	
		System.out.print(min(a,b,n));
		
		}
	static void sort(int a[],int n) {
		for(int i=0;i<n;i++) {
			for(int j=i+1;j<n;j++) {
				if(a[i]>a[j]) {
					int temp=a[i];
					a[i]=a[j];
					a[j]=temp;					
				}
			}
		}
	}
	
	static int min(int []a,int []b,int n) {
		int s=0;
		for(int i=0;i<n;i++) {
			 s+=Math.abs(a[i]-b[i]);
			 	}
		return s;
		
	}
	
}
//--------------------------

//gfg solution

package GFG_PROBLEM;
import java.util.*;
public class minisum_sum_of_absolute_differences_of_pairs {
	public static void main(String args[]) {
		int a[]=new int[] {4,1,8,7}, b[]=new int[] {2,3,6,5};
		int n=a.length;
		sort(a,n);
		sort(b,n);	
		System.out.print(min(a,b,n));
		
		}
	static void sort(int a[],int n) {
		for(int i=0;i<n;i++) {
			for(int j=i+1;j<n;j++) {
				if(a[i]>a[j]) {
					int temp=a[i];
					a[i]=a[j];
					a[j]=temp;					
				}
			}
		}
	}
	
	static int min(int []a,int []b,int n) {
		int s=0;
		for(int i=0;i<n;i++) {
			 s+=Math.abs(a[i]-b[i]);
			 	}
		return s;
		
	}
	
}
