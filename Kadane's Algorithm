//my solution

package GFG_PROBLEM;
import java.util.*;
public class kadanes_algorithm {
	public static void main(String args[]) {
		int n=5;
		int arr[]= {1,2,3,-2,5};
		int max=Integer.MIN_VALUE;
		int sum=0;
		for(int i=0;i<n;i++) {
			sum=sum+arr[i];
			if(sum<0)
				sum=0;
			else if(max<sum)
				max=sum;
				
		}
		System.out.println(max);
	}
}
//-------------------------------------------------
//gfg solution

class Solution{

    // arr: input array
    // n: size of array
    //Function to find the sum of contiguous subarray with maximum sum.
    long maxSubarraySum(int arr[], int n){
        int sum=0,max=Integer.MIN_VALUE;
        for(int i=0;i<n;i++){
            sum=sum+arr[i];
             if(max<sum)
                max=sum;
            if(sum<0)
                sum=0;
        }
        
        return max;
    }
    
}
